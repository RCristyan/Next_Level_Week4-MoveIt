{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/renan/Documentos/Next_Level_week4-MoveIt/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/renan/Documentos/Next_Level_week4-MoveIt/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Move.It | Novo desafio!', {\n        body: \"Valendo \".concat(challenge.amount, \" xp\")\n      });\n    }\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      levelUp();\n      finalExperience = finalExperience - experienceToNextLevel;\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      completeChallenge: completeChallenge,\n      resetChallenge: resetChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen ? /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 36\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"UqHVByiPLb7kVaLDO0z8bDhE3KM=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/renan/Documentos/Next_Level_week4-MoveIt/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","completeChallenge","finalExperience","resetChallenge"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from  'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\n\ninterface Challenge {\n    type: 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContextData {\n    level: number;\n    currentExperience: number;\n    experienceToNextLevel: number;\n    challengesCompleted: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    completeChallenge: () => void;\n    resetChallenge: () => void;\n    closeLevelUpModal: () => void;\n}\n\ninterface ChallengesProviderProps {\n    children: ReactNode;\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\nexport function ChallengesProvider({ \n    children, \n    ...rest\n} : ChallengesProviderProps){\n    const [level, setLevel] = useState(rest.level ?? 1);\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n    const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, []);\n\n    useEffect(() => {\n        Cookies.set('level', String(level));\n        Cookies.set('currentExperience', String(currentExperience));\n        Cookies.set('challengesCompleted', String(challengesCompleted));\n    }, [level, currentExperience, challengesCompleted]);\n\n    function levelUp(){\n        setLevel(level + 1);\n        setIsLevelUpModalOpen(true);\n    }\n\n    function closeLevelUpModal(){\n        setIsLevelUpModalOpen(false);\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge);\n        new Audio('/notification.mp3').play();\n\n        if(Notification.permission === 'granted'){\n            new Notification('Move.It | Novo desafio!', {\n                body: `Valendo ${challenge.amount} xp`\n            });\n        }\n    }\n\n    function completeChallenge(){\n        if(!activeChallenge){\n            return;\n        }\n\n        const { amount } = activeChallenge;\n        \n        let finalExperience = currentExperience + amount;\n        if(finalExperience >= experienceToNextLevel){\n            levelUp();\n            finalExperience = finalExperience - experienceToNextLevel;\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null);\n    }\n\n    return (\n        <ChallengesContext.Provider \n            value={{ \n                level,\n                currentExperience,\n                experienceToNextLevel,\n                challengesCompleted,\n                levelUp,\n                startNewChallenge,\n                activeChallenge,\n                completeChallenge,\n                resetChallenge,\n                closeLevelUpModal,\n            }}\n        >\n            {children}\n\n            { isLevelUpModalOpen ? <LevelUpModal /> : null }\n\n            {/*\n                o comando acima é equivalente a \n                { isLevelUpModalOpen && <LevelUpModal /> } \n            */}\n\n        </ChallengesContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}